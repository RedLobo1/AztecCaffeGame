using System.Collections;
using UnityEngine;
using UnityEngine.InputSystem;

public class CharacterControl2D : MonoBehaviour
{
    // Connected logic parts
    public GunShotLogic GunLogic;
    public GameLogic GameLogic;
    public Transform MousePosition;
    public SpriteRenderer SRenderer;

    private Rigidbody2D _rb;
    private Vector2 _dashDir;

    // Movement
    [SerializeField] private float _dashMultiplier;
    [SerializeField] private float _timeSlowScale;
    [SerializeField] private float _invincibleTime;

    // Controls
    public InputMaster PlayerInputMaster; // Controls class generated by Unity

    // Shooting logic parts
    private bool _dashing;
    private bool _shot;

    public bool CanShoot;
    public bool Aiming;
    public bool StopTime;

    // Health
    public bool Invincible;
    private bool _dead;
    private int _health = 2;

    // Properties for encapsulation
    public int Health
    {
        get { return _health; }
        set
        {
            if (_health <= 0)
            {
                Invincible = true;
                Dead = true;
                return;
            }

            Invincible = true;
            StartCoroutine(MakeCharacterWhiteAndInvincible());
            _health = value;
        }
    }

    private IEnumerator MakeCharacterWhiteAndInvincible()
    {
        SRenderer.color = Color.red;
        yield return new WaitForSeconds(_invincibleTime);
        SRenderer.color = Color.white;
        Invincible = false;
    }

    public bool Dead
    {
        get { return _dead; }
        set
        {
            if (_dead == true)
            {
                _dead = !_dead;
            }
            SRenderer.color = Color.black;
            _dead = value;
        }
    }

    private bool isShooting = false;
    private bool isAiming = false;

    private void OnEnable()
    {
        PlayerInputMaster.Player.Enable();
    }

    private void OnDisable()
    {
        PlayerInputMaster.Player.Disable();
    }

    private void StopShooting()
    {
        // Stop shooting logic
        isShooting = false;
    }

    void Awake()
    {
        PlayerInputMaster = new InputMaster();

        // Subscribe to the fire action


        _rb = GetComponent<Rigidbody2D>();
    }

    void Update()
    {
        if (Dead)
            return;

        // Movement
        CharacterDash();
        GunLogic.Ready = false;
        CharacterShoot();

        if (_dashing || Aiming || StopTime)
            return;
        else
            Time.timeScale = 1;
    }

    private void CharacterShoot()
    {
        if (PlayerInputMaster.Player.Aim.triggered)
        {
            Aiming = !Aiming;
            if (Aiming)
            {
                Time.timeScale = _timeSlowScale;
                Time.fixedDeltaTime = Time.timeScale * .02f;
            }
        }

        if (!CanShoot)
            return;

        GunLogic.Ready = true;

        if (PlayerInputMaster.Player.Shoot.triggered && Aiming)
        {
            CalculateDirection();
            _rb.velocity = Vector2.zero;
            _rb.AddForce(_dashDir * -2, ForceMode2D.Impulse);
            Aiming = false;
            GunLogic.Shot = true;
            GameLogic.ShotEvent = true;
        }
    }

    private void CharacterDash()
    {
        if (PlayerInputMaster.Player.Shoot.triggered)
        {
            _dashing = true;
            Time.timeScale = _timeSlowScale;
            Time.fixedDeltaTime = Time.timeScale * .02f;
        }

        if (PlayerInputMaster.Player.Shoot.triggered && _dashing)
        {
            CalculateDirection();
            _rb.velocity = Vector2.zero;
            _rb.AddForce(_dashDir, ForceMode2D.Impulse);
            _dashing = false;
        }
    }

    private void CalculateDirection()
    {
        Vector2 moveDirection = MousePosition.position - transform.position;
        _dashDir = moveDirection.normalized * _dashMultiplier;
    }
}
